<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCADIAU4DASIAAhEBAxEB/8QA
        FwABAQEBAAAAAAAAAAAAAAAAAQACB//EABwQAQEBAQEBAQEBAAAAAAAAAAABETFBIVFhAv/EABgBAQEB
        AQEAAAAAAAAAAAAAAAIBAAMF/8QAFxEBAQEBAAAAAAAAAAAAAAAAAAERAv/aAAwDAQACEQMRAD8A46kn
        uPMSSVkUVZFGQhRRVE0kQorCWIsRkKoEcOEwxfCcZtZ+L41ixm1nIsawWM2so4sRmQ3gTFYxNAbFZsDQ
        FWbA0EVmhoUSjNgaCKEkjJJIySTMlE1CZGQNRUtUIjRDVIZMUKomlDDkEFNEgJxKlqxFKgxY0sXECORY
        2Mzhw4sbGZWEYigNBFlZoaCKyGhRsJmwNCgrFDdZSqzVSBKMo0IqSQskkrKNAzpMZCoosGloRohRRKQU
        UYaExQqKSJSIsKOHiBFYrLFixYzBHE2MymsCYrIaAWMKy0BKM2BoWIrI8aooUmA1RRVlmtAaUFZaFEgk
        hZKdSis0p+oyFEpIhhC1CJMhhCY0I1DiIwRohtKRk+FIKKLoiMiwqixZ/DIcVGcqytfEzM2fxY1gZmcD
        QRWRY0BsVkNWAKrNgrTNEozQ0KNJlm9aFjnVZoPoSkyGqKJMo0CqMDUaMvWp1mNGlJ/BPDFGteEGHBMa
        EMOC1FESgqNCF0iEyIlBqKMVEshOKgxZDixm1nE1YGZkNCxFZDVZSqGb1oUKUZorVF65rGbxmtM1CZqp
        vQ50may1WaNKChpkSgoN5QKr1qM+tLGUanGY1OENahn0Q/5KQTOtRmda8LlDGoIfHSCTOhr1YBM4D+Ok
        QwxQmJhEMVGiI0WIE0CxGQ1RRVkGgVFZarNRRWfWqzQpAUhzJkU0UaTNDVZ9CkL1m8avWQpRkemj1FgD
        V6yJL1qM+tNGUanGY1OEla9p/wA8EP8AkoBnWvGZ1rw4jUPgh8KC1D6y16cAn0H8dIjXjUZhKCY16zDF
        RqcbjEaOUSkD1l4KqKFUeM+mgFF4KazRpQeM1qs0aoFIcyZF9NFQhWfWqz650hes/rV6yFIVm9NHqLFe
        stXrIkvWoy1EjKNTjMaNK1DPjM8MUGp1qMmHEajUZhjoLRnQVgtGcZhdILUMBKI1CyYSNlg6otJnVq62
        EK0IyCFqKqyayJKs+kUaUApovXNYyKWaNIUG9DnSF6zeGs0aUA9aZFYAbygSRgUVmvWp1kyklaP4zDFG
        t+FmXYYUFqNMxqOkRqKMxpQpjTJl+OkqNGVkkjRZ0kLS2CU6zHVsHxMy1LQzIIMyCA0kzem0OdqwUUs0
        SivGaRRpM1VC0KorJ9A0oKDRRKCg0CqU6kzNKfgM6UatERQgbhZjSiY0yTiNGMmGjaEKiSyTlRoysnS1
        GtW/1laqY1tW1nVra2NW/wBWs6mbDoWhNVC1AbVQQBVaKhahCg0UKoZvTRQIUICQBFQgkhZJJmUaZais
        ZSy1Cg0tMRpUrRZhKUWiIYYtGMNE2NIalFrSyl1MaQWlqNatZ2LW1sKGrW1cSA0dYhBFNZQQlaEKNqoe
        IULVANZGlEzSEpRVk0CqSQskkzJRJWaMrJJq1CyZVFqUy6ySFpplFKjRZ0lKjRZlK6jWpnTqph1atWtq
        YUNWs2LTo0a2thWs6tZcIWhNVUIJaqCAWqrQgiigiiQqqAkEkjJJIySTMkkzIpExKRJSUlEtJKiKSodS
        RoUkqHV8SVl8XxJmWxakzBJIwCQ1RqSFRaEkUWhIVFCSFBaEkVJIWSSZn//Z
</value>
  </data>
</root>